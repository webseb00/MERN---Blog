{"version":3,"sources":["components/common/Logo/Logo.js","components/layout/MainMenu/MainMenu.js","components/features/NavBar/NavBar.js","components/layout/PageContainer/PageContainer.js","components/layout/MainLayout/MainLayout.js","components/common/PageTitle/PageTitle.js","config.js","redux/postsRedux.js","components/common/Button/Button.js","components/common/SmallTitle/SmallTitle.js","components/common/HtmlBox/HtmlBox.js","components/features/PostSummary/PostSummary.js","components/features/PostSummary/cutText.js","components/features/PostsList/PostsList.js","components/common/Spinner/Spinner.js","components/common/Alert/Alert.js","components/common/Pagination/Pagination.js","components/features/Posts/Posts.js","components/features/Posts/PostsContainer.js","components/pages/Home/HomePage.js","components/features/PostsCounter/PostsCounter.js","components/features/PostsCounter/PostsCounterContainer.js","components/pages/Posts/PostsPage.js","components/pages/Contact/ContactPage.js","components/pages/NotFound/NotFoundPage.js","components/pages/SinglePost/Post.js","components/pages/SinglePost/SinglePost.js","components/pages/SinglePost/SinglePostContainer.js","components/pages/SinglePost/SinglePostPage.js","components/common/TextField/TextField.js","components/common/SectionTitle/SectionTitle.js","components/features/PostForm/PostForm.js","components/features/PostForm/PostFormContainer.js","components/pages/AddPost/AddPostPage.js","components/features/UpdatePost/PostFormUpdate.js","components/features/UpdatePost/PostFormUpdateContainer.js","components/pages/UpdatePost/PostFormUpdatePage.js","components/features/RandomPost/RandomPost.js","components/features/RandomPost/RandomPostContainer.js","components/pages/RandomPost/RandomPostPage.js","App.js","redux/store.js","index.js"],"names":["Logo","_ref","links","location","react_default","a","createElement","className","MainMenu","map","link","index","key","react_router_dom","pathname","path","to","title","withRouter","props","MainMenu_MainMenu_MainMenu","NavBar","state","this","common_Logo_Logo","layout_MainMenu_MainMenu","React","Component","PageContainer","children","MainLayout","layout_PageContainer_PageContainer","features_NavBar_NavBar","PageTitle","BASE_URL","createActionName","name","concat","LOAD_POSTS","START_REQUEST","startRequest","type","END_REQUEST","endRequest","ERROR_REQUEST","errorRequest","error","GET_SINGLE_POST","LOAD_POSTS_PAGE","loadPostsByPage","payload","getPosts","posts","data","getRequest","_ref3","request","getPages","_ref5","Math","ceil","amount","postsPerPage","initialState","pending","success","singlePost","presentPage","initialPage","loadPostsRequest","_ref8","Object","asyncToGenerator","regenerator_default","mark","_callee","dispatch","res","wrap","_context","prev","next","axios","get","sent","t0","message","stop","_x","apply","arguments","Button","_ref$variant","variant","otherProps","objectWithoutProperties","assign","SmallTitle","HtmlBox","ReactHtmlParser","PostSummary","id","content","author","common_SmallTitle_SmallTitle","common_HtmlBox_HtmlBox","maxLength","length","substr","lastIndexOf","cutText","common_Button_Button","PostsList","post","features_PostSummary_PostSummary","Spinner","react_animated_css_lib","animationIn","animationOut","Alert","index_esm","icon","Pagination","_this","initalPage","changePage","newPage","onPageChange","setState","goToRight","page","incrementPage","goToLeft","decrementPage","_this$props","pages","pagination","leftIcon","fa_index_esm","onClick","rightIcon","toConsumableArray","Array","el","Posts","loadPostsPage","_this$props2","features_PostsList_PostsList","common_Pagination_Pagination","common_Spinner_Spinner","common_Alert_Alert","checkData","defaultProps","connect","_ref6","_ref7","_ref12","_callee5","startAt","limit","_context5","_x5","loadPostsByPageRequest","HomePage","common_PageTitle_PageTitle","PostsContainer","PostsCounter","postsNumber","_ref2","PostsPage","PostsCounterContainer","ContactPage","NotFoundPage","Post","react_facebook_lib","appId","href","Post_Post","SinglePost","classCallCheck","possibleConstructorReturn","getPrototypeOf","call","SinglePost_Post","loadSinglePost","_ref4","_ref9","_callee2","_context2","_x2","loadSinglePostRequest","SinglePostPage","SinglePostContainer","match","params","TextField","value","label","onChange","SectionTitle","PostForm","addPost","e","preventDefault","updateField","objectSpread","defineProperty","target","handleEditor","text","onSubmit","common_TextField_TextField","common_SectionTitle_SectionTitle","react_medium_editor_default","options","placeholder","toolbar","buttons","_ref10","_callee3","_context3","_x3","addPostRequest","AddPostPage","PostFormContainer","PostFormUpdate","updatePost","routeId","findPost","getSinglePost","find","updatedPost","_ref11","_callee4","_context4","_x4","updatePostRequest","loadPosts","PostFormUpdatePage","PostFormUpdateContainer","RandomPost","componentDidMount","getRandomPost","floor","random","detailPost","RandomPostPage","RandomPostContainer","App","_this2","fetch","then","json","layout_MainLayout_MainLayout","react_router","exact","component","Home","Contact","NotFound","rootReducer","combineReducers","statePart","undefined","action","store","createStore","compose","applyMiddleware","thunk","window","__REDUX_DEVTOOLS_EXTENSION__","rootElement","document","getElementById","ReactDOM","render","es","src_App"],"mappings":"ujBAQeA,UAJF,SAAAC,KAAGC,MAAHD,EAAUE,SAAV,OACXC,EAAAC,EAAAC,cAAA,MAAIC,UAAU,QAAd,sBCCIC,UAAW,SAAAP,GAAA,IAAGC,EAAHD,EAAGC,MAAOC,EAAVF,EAAUE,SAAV,OACfC,EAAAC,EAAAC,cAAA,MAAIC,UAAU,aACVL,EAAMO,IAAI,SAACC,EAAMC,GAAP,OACVP,EAAAC,EAAAC,cAAA,MAAIM,IAAKD,GACPP,EAAAC,EAAAC,cAACO,EAAA,EAAD,CAAMN,UAAYJ,EAASW,WAAaJ,EAAKK,KAAQ,SAAa,GAAIC,GAAIN,EAAKK,MAAOL,EAAKO,aAapFC,cAAW,SAAAC,GAAK,OAAIf,EAAAC,EAAAC,cAACc,EAAaD,KCOlCE,qNAvBXC,MAAQ,CACJpB,MAAO,CACH,CAAEa,KAAM,IAAKE,MAAO,QACpB,CAAEF,KAAM,aAAcE,MAAO,YAC7B,CAAEF,KAAM,SAAUE,MAAO,SACzB,CAAEF,KAAM,WAAYE,MAAO,WAC3B,CAAEF,KAAM,UAAWE,MAAO,yFAIzB,IAEGf,EAAUqB,KAAKD,MAAfpB,MAER,OACIE,EAAAC,EAAAC,cAAA,OAAKC,UAAU,UACXH,EAAAC,EAAAC,cAACkB,EAAD,MACApB,EAAAC,EAAAC,cAACmB,EAAD,CAAWvB,MAAOA,YAnBbwB,IAAMC,YCUZC,UAVO,SAAA3B,GAAA,IAAG4B,EAAH5B,EAAG4B,SAAH,OACpBzB,EAAAC,EAAAC,cAAA,OAAKC,UAAU,mBACZsB,KCMUC,EATI,SAAA7B,GAAA,IAAG4B,EAAH5B,EAAG4B,SAAH,OACfzB,EAAAC,EAAAC,cAAA,WACIF,EAAAC,EAAAC,cAACyB,EAAD,KACI3B,EAAAC,EAAAC,cAAC0B,EAAD,MACCH,KCOEI,UAVG,SAAAhC,GAAA,IAAG4B,EAAH5B,EAAG4B,SAAH,OAChBzB,EAAAC,EAAAC,cAAA,MAAIC,UAAU,cACVsB,uECLOK,EAAW,0CCGlBC,EAAmB,SAAAC,GAAI,aAAAC,OADT,QACS,KAAAA,OAA0BD,IAE1CE,EAAaH,EAAiB,cAG9BI,EAAgBJ,EAAiB,iBACjCK,EAAe,iBAAO,CAAEC,KAAMF,IAE9BG,EAAcP,EAAiB,eAC/BQ,EAAa,iBAAO,CAAEF,KAAMC,IAE5BE,EAAgBT,EAAiB,iBACjCU,EAAe,SAAAC,GAAK,MAAK,CAAEA,QAAOL,KAAMG,IAExCG,EAAkBZ,EAAiB,mBAGnCa,EAAkBb,EAAiB,mBACnCc,EAAkB,SAAAC,GAAO,MAAK,CAAEA,UAAST,KAAMO,IAG/CG,EAAW,SAAAlD,GAAA,OAAAA,EAAGmD,MAAkBC,MAIhCC,EAAa,SAAAC,GAAA,OAAAA,EAAGH,MAAkBI,SAIlCC,EAAW,SAAAC,GAAA,IAAGN,EAAHM,EAAGN,MAAH,OAAeO,KAAKC,KAAKR,EAAMS,OAAST,EAAMU,eAMhEC,EAAe,CACjBV,KAAM,GACNG,QAAS,CACLQ,SAAS,EACTlB,MAAO,KACPmB,QAAS,MAEbC,WAAY,GACZL,OAAQ,EACRM,YAAa,KACbC,YAAa,GA+BV,IAAMC,EAAmB,WAC5B,sBAAAC,EAAAC,OAAAC,EAAA,EAAAD,CAAAE,EAAApE,EAAAqE,KAAO,SAAAC,EAAMC,GAAN,IAAAC,EAAA,OAAAJ,EAAApE,EAAAyE,KAAA,SAAAC,GAAA,cAAAA,EAAAC,KAAAD,EAAAE,MAAA,cACHL,EAASpC,KADNuC,EAAAC,KAAA,EAAAD,EAAAE,KAAA,EAGiBC,IAAMC,IAAN,GAAA9C,ODrFL,OCqFK,WAHjB,OAGKwC,EAHLE,EAAAK,KAICR,EA9EyB,CAAE1B,QA8ER2B,EAAIxB,KA9EaZ,KAAMH,IA+E1CsC,EAASjC,KALVoC,EAAAE,KAAA,gBAAAF,EAAAC,KAAA,EAAAD,EAAAM,GAAAN,EAAA,SAOCH,EAAS/B,EAAakC,EAAAM,GAAEC,UAPzB,yBAAAP,EAAAQ,SAAAZ,EAAA,iBAAP,gBAAAa,GAAA,OAAAlB,EAAAmB,MAAAlE,KAAAmE,YAAA,YCnEWC,SAVA,SAAA1F,GAAA,IAAA2F,EAAA3F,EAAG4F,eAAH,IAAAD,EAAa,GAAbA,EAAiB/D,EAAjB5B,EAAiB4B,SAAaiE,EAA9BvB,OAAAwB,EAAA,EAAAxB,CAAAtE,EAAA,+BACbG,EAAAC,EAAAC,cAAA,SAAAiE,OAAAyB,OAAA,GAAaF,EAAb,CAA0BvF,UAAS,kBAAA8B,OAAqBwD,KACpDhE,KCOSoE,UAVI,SAAAhG,GAAA,IAAG4B,EAAH5B,EAAG4B,SAAaiE,EAAhBvB,OAAAwB,EAAA,EAAAxB,CAAAtE,EAAA,qBACjBG,EAAAC,EAAAC,cAAA,KAAAiE,OAAAyB,OAAA,GAAQF,EAAR,CAAoBvF,UAAU,gBAC1BsB,uBCQSqE,EAVC,SAAAjG,GAAA,IAAG4B,EAAH5B,EAAG4B,SAAaiE,EAAhBvB,OAAAwB,EAAA,EAAAxB,CAAAtE,EAAA,qBACZG,EAAAC,EAAAC,cAAA,IAAAiE,OAAAyB,OAAA,GAAOF,EAAP,CAAmBvF,UAAU,aACxB4F,IAAgBtE,KC4BVuE,UAzBK,SAAAnG,GAAA,IAAGoG,EAAHpG,EAAGoG,GAAIpF,EAAPhB,EAAOgB,MAAOqF,EAAdrG,EAAcqG,QAASC,EAAvBtG,EAAuBsG,OAAvB,OAChBnG,EAAAC,EAAAC,cAAA,WAASC,UAAU,gBACfH,EAAAC,EAAAC,cAACkG,EAAD,KAAavF,GACbb,EAAAC,EAAAC,cAACmG,EAAD,KCZO,SAACH,EAASI,GACrB,OAAGJ,EAAQK,OAAS,EACT,QAGRL,EAAQK,QAAUD,EACVJ,EAGJA,EAAQM,OAAO,EAAGN,EAAQO,YAAY,IAAKH,IAAc,MDGlDI,CAAQR,EAAS,MAC3BlG,EAAAC,EAAAC,cAAA,oBAAYiG,GACZnG,EAAAC,EAAAC,cAACO,EAAA,EAAD,CAAMG,GAAI,UAAYqF,GAClBjG,EAAAC,EAAAC,cAACyG,EAAD,CAAQlB,QAAQ,WAAhB,cAIJzF,EAAAC,EAAAC,cAACO,EAAA,EAAD,CAAMG,GAAI,UAAYqF,EAAK,SACvBjG,EAAAC,EAAAC,cAACyG,EAAD,CAAQlB,QAAQ,QAAhB,YEGGmB,EAnBG,SAAA/G,GAAA,IAAEmD,EAAFnD,EAAEmD,MAAF,OACdhD,EAAAC,EAAAC,cAAA,WACIF,EAAAC,EAAAC,cAAA,WAASC,UAAU,cACd6C,EAAM3C,IAAI,SAAAwG,GAAI,OAAI7G,EAAAC,EAAAC,cAAC4G,EAAD3C,OAAAyB,OAAA,CAAapF,IAAKqG,EAAKZ,IAAQY,kBCS/CE,WAXC,kBACd/G,EAAAC,EAAAC,cAAC8G,GAAA,SAAD,CAAUC,YAAY,SAASC,aAAa,WAC1ClH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,gBACbH,EAAAC,EAAAC,cAAA,YACAF,EAAAC,EAAAC,cAAA,YACAF,EAAAC,EAAAC,cAAA,YACAF,EAAAC,EAAAC,cAAA,yBC6BSiH,WAjCD,SAAAtH,GAA+C,IAAA2F,EAAA3F,EAA5C4F,eAA4C,IAAAD,EAAlC,GAAkCA,EAA9B/D,EAA8B5B,EAA9B4B,SAAaiE,EAAiBvB,OAAAwB,EAAA,EAAAxB,CAAAtE,EAAA,wBAiB3D,OACEG,EAAAC,EAAAC,cAAC8G,GAAA,SAAD,CAAUC,YAAY,SAASC,aAAa,WAC1ClH,EAAAC,EAAAC,cAAA,MAAAiE,OAAAyB,OAAA,GAASF,EAAT,CAAqBvF,UAAS,gBAAA8B,OAAkBwD,KAjBvC,WACX,OAAOA,GACL,IAAK,OACH,OAAOzF,EAAAC,EAAAC,cAACkH,GAAA,EAAD,MACT,IAAK,UACH,OAAOpH,EAAAC,EAAAC,cAACkH,GAAA,EAAD,MACT,IAAK,UAEL,IAAK,QACH,OAAOpH,EAAAC,EAAAC,cAACkH,GAAA,EAAD,MACT,QACE,OAAOpH,EAAAC,EAAAC,cAACkH,GAAA,EAAD,OAONC,GACDrH,EAAAC,EAAAC,cAAA,QAAMC,UAAU,eAAesB,yBC6CxB6F,8MA/DXpG,MAAQ,CACV6C,YAAawD,EAAKxG,MAAMgD,aAAewD,EAAKxG,MAAMyG,cAGnDC,WAAa,SAACC,GAAY,IACjBC,EAAkBJ,EAAKxG,MAAvB4G,aACRJ,EAAKK,SAAS,CAAE7D,YAAa2D,IACvBC,EAAaD,MAGjBG,UAAY,SAACC,GAAS,IACVH,EAAiBJ,EAAKxG,MAAtB4G,aACFI,EAAgBD,EAAO,EAC7BP,EAAKK,SAAS,CAAE7D,YAAagE,IAC7BJ,EAAaI,MAGjBC,SAAW,SAACF,GAAS,IACTH,EAAiBJ,EAAKxG,MAAtB4G,aACFM,EAAgBH,EAAO,EAC7BP,EAAKK,SAAS,CAAE7D,YAAakE,IAC7BN,EAAaM,4EAGR,IAAAC,EAEyB/G,KAAKJ,MAA3BoH,EAFHD,EAEGC,MAAOC,EAFVF,EAEUE,WACPrE,EAAgB5C,KAAKD,MAArB6C,YACA0D,EAAoCtG,KAApCsG,WAAYI,EAAwB1G,KAAxB0G,UAAWG,EAAa7G,KAAb6G,SACzBK,EAAWtE,GAAe,EAAI/D,EAAAC,EAAAC,cAACoI,GAAA,EAAD,CAAanI,UAAU,yBAAyBoI,QAAS,kBAAMP,EAASjE,MAAoB,GAC1HyE,EAAYzE,IAAgBoE,EAAQnI,EAAAC,EAAAC,cAACoI,GAAA,EAAD,CAAcnI,UAAU,yBAAyBoI,QAAS,kBAAMV,EAAU9D,MAAmB,GAEvI,OAAGqE,EAECpI,EAAAC,EAAAC,cAAA,OAAKC,UAAU,cACXH,EAAAC,EAAAC,cAAA,MAAIC,UAAU,oBACVH,EAAAC,EAAAC,cAAA,UAAMmI,GACLlE,OAAAsE,EAAA,EAAAtE,CAAIuE,MAAMP,IAAQ9H,IAAI,SAACsI,EAAIb,GAAL,OACnB9H,EAAAC,EAAAC,cAAA,MACIM,MAAOsH,EACPS,QAAS,kBAAMd,EAAWK,IAC1B3H,UAAS,yBAAA8B,OAA6B6F,IAAU/D,EAAe,kCAAoC,KAClG+D,KAGT9H,EAAAC,EAAAC,cAAA,UAAMsI,KAKP,UApDMlH,IAAMC,WCDzBqH,8MAEF1H,MAAQ,CACJwC,aAAc6D,EAAKxG,MAAM2C,aACzB0E,WAAYb,EAAKxG,MAAMqH,cAe3BS,cAAgB,SAACf,IAIbjF,EAH4B0E,EAAKxG,MAAzB8B,iBAGQiF,EAFSP,EAAKrG,MAAtBwC,kGAdQ,IAAAwE,EACyB/G,KAAKJ,OAG9C8B,EAJgBqF,EACRrF,iBADQqF,EACSlE,YACA7C,KAAKD,MAAtBwC,2DAMYvC,KAAKJ,MAAjBqC,QACAS,QAAU,yCAUV,IAAAiF,EACoD3H,KAAKJ,MAAzDiC,EADA8F,EACA9F,MAAOI,EADP0F,EACO1F,QAAS+E,EADhBW,EACgBX,MAAOnE,EADvB8E,EACuB9E,YAAaD,EADpC+E,EACoC/E,YACpCqE,EAAejH,KAAKD,MAApBkH,WACAS,EAAkB1H,KAAlB0H,cAER,OAAyB,IAApBzF,EAAQQ,UACY,IAApBR,EAAQS,SACRb,EAAMuD,OAAS,EAGZvG,EAAAC,EAAAC,cAAA,WACIF,EAAAC,EAAAC,cAAC6I,EAAD,CAAW/F,MAAOA,IAClBhD,EAAAC,EAAAC,cAAC8I,GAAD,CACIb,MAAOA,EACPR,aAAckB,EACd7E,YAAaA,EACboE,WAAYA,EACZrE,YAAaA,MAMJ,IAApBX,EAAQQ,SACY,OAApBR,EAAQS,QAEH7D,EAAAC,EAAAC,cAAC+I,GAAD,OAEe,IAApB7F,EAAQQ,SACU,OAAlBR,EAAQV,MAEH1C,EAAAC,EAAAC,cAACgJ,GAAD,CAAOzD,QAAQ,SAAf,+BAEe,IAApBrC,EAAQQ,UACY,IAApBR,EAAQS,SACS,IAAjBb,EAAMuD,OAEAvG,EAAAC,EAAAC,cAACgJ,GAAD,CAAOzD,QAAQ,QAAf,uBALJ,mCAUP,OACIzF,EAAAC,EAAAC,cAAA,WACMiB,KAAKgI,oBAtEH7H,IAAMC,WA0F1BqH,GAAMQ,aAAe,CACjB1F,aAAc,EACd0E,YAAY,GAGDQ,UChFAS,eAZS,SAAAnI,GAAK,MAAK,CAChC8B,MAAOD,EAAS7B,GAChBkC,QAASF,EAAWhC,GACpBiH,MAAO9E,EAASnC,GAChB8C,aXsB4BsF,EWtBApI,EXsBAoI,EAAGtG,MAAkBgB,aWrBjDD,aXuB4BwF,EWvBArI,EXuBAqI,EAAGvG,MAAkBe,cAArB,IAAAwF,EAFAD,GWlBH,SAAA9E,GAAQ,MAAK,CACtC3B,gBAAiB,SAACiF,EAAMpE,GAAP,OAAwBc,EXqHL,SAACsD,EAAMpE,GACzC,sBAAA8F,EAAArF,OAAAC,EAAA,EAAAD,CAAAE,EAAApE,EAAAqE,KAAO,SAAAmF,EAAMjF,GAAN,IAAAkF,EAAAC,EAAAlF,EAAA3B,EAAA,OAAAuB,EAAApE,EAAAyE,KAAA,SAAAkF,GAAA,cAAAA,EAAAhF,KAAAgF,EAAA/E,MAAA,cACHL,EAASpC,KADNwH,EAAAhF,KAAA,EAIO8E,GAAW5B,EAAK,GAAKpE,EACrBiG,EAAQjG,EALfkG,EAAA/E,KAAA,EAOiBC,IAAMC,IAAN,GAAA9C,ODhJL,OCgJK,iBAAAA,OAAoCyH,EAApC,KAAAzH,OAA+C0H,IAPhE,OAOKlF,EAPLmF,EAAA5E,KASOlC,EAAU,CACZE,MAAOyB,EAAIxB,KAAKD,MAChBS,OAAQgB,EAAIxB,KAAKQ,OACjBC,eACAK,YAAa+D,GAGjBtD,EAAS3B,EAAgBC,IACzB0B,EAASjC,KAjBVqH,EAAA/E,KAAA,iBAAA+E,EAAAhF,KAAA,GAAAgF,EAAA3E,GAAA2E,EAAA,SAoBCpF,EAAS/B,EAAamH,EAAA3E,GAAEC,UApBzB,yBAAA0E,EAAAzE,SAAAsE,EAAA,kBAAP,gBAAAI,GAAA,OAAAL,EAAAnE,MAAAlE,KAAAmE,YAAA,GWtHgDwE,CAAuBhC,EAAMpE,OAGlE2F,CAA6CT,ICX7CmB,GAPE,kBACb/J,EAAAC,EAAAC,cAAA,WACIF,EAAAC,EAAAC,cAAC8J,EAAD,aACAhK,EAAAC,EAAAC,cAAC+J,GAAD,CAAOvG,aAAc,EAAG0E,YAAY,MCa7B8B,oLAfJ,IAECC,EAAgBhJ,KAAKJ,MAArBoJ,YAER,OACEnK,EAAAC,EAAAC,cAAA,6BAAsC,IAAhBiK,EAAoB,mBAAqBA,UAP1C7I,IAAMC,WCKlB8H,eAJS,SAAAnI,GAAK,MAAK,CAC9BiJ,aduB0BC,EcvBElJ,EduBFkJ,EAAGpH,MAAkBC,KAAKsD,SAA1B,IAAA6D,GcpBff,CAAyBa,ICMzBG,GARG,kBAChBrK,EAAAC,EAAAC,cAAA,WACEF,EAAAC,EAAAC,cAAC8J,EAAD,mBACAhK,EAAAC,EAAAC,cAACoK,GAAD,MACAtK,EAAAC,EAAAC,cAAC+J,GAAD,QCMWM,GAbK,kBAClBvK,EAAAC,EAAAC,cAAA,OAAKC,UAAU,mBACbH,EAAAC,EAAAC,cAAC8J,EAAD,gBACAhK,EAAAC,EAAAC,cAAA,OAAKC,UAAU,gBACbH,EAAAC,EAAAC,cAAA,wCACAF,EAAAC,EAAAC,cAAA,iCACAF,EAAAC,EAAAC,cAAA,qCACAF,EAAAC,EAAAC,cAAA,WACAF,EAAAC,EAAAC,cAAA,2CCHSsK,GANM,kBACnBxK,EAAAC,EAAAC,cAAA,WACEF,EAAAC,EAAAC,cAAA,sCCKEuK,GAAO,SAAA5K,GAAA,IAAGiE,EAAHjE,EAAGiE,WAAY/D,EAAfF,EAAeE,SAAf,OAETC,EAAAC,EAAAC,cAAA,OAAK+F,GAAInC,EAAWmC,IAChBjG,EAAAC,EAAAC,cAAA,WAASC,UAAU,gBACfH,EAAAC,EAAAC,cAAC8J,EAAD,KAAYlG,EAAWjD,OACvBb,EAAAC,EAAAC,cAACmG,EAAD,KAAUvC,EAAWoC,SACrBlG,EAAAC,EAAAC,cAAA,oBAAY4D,EAAWqC,QACvBnG,EAAAC,EAAAC,cAACwK,GAAA,iBAAD,CAAkBC,MAAM,mBACpB3K,EAAAC,EAAAC,cAACwK,GAAA,YAAD,CAAaE,KAAI,GAAA3I,OAAKH,EAAL,KAAAG,OAAiBlC,EAASW,UAAYP,UAAU,0BAAjE,0BAKRH,EAAAC,EAAAC,cAACwK,GAAA,iBAAD,CAAkBC,MAAM,mBACpB3K,EAAAC,EAAAC,cAACwK,GAAA,SAAD,CAAUE,KAAI,GAAA3I,OAAKH,EAAL,KAAAG,OAAiBlC,EAASW,eAarCI,eAAW,SAAAC,GAAK,OAAIf,EAAAC,EAAAC,cAAC2K,GAAS9J,KCc9B+J,eA5CX,SAAAA,EAAY/J,GAAO,IAAAwG,EAAA,OAAApD,OAAA4G,EAAA,EAAA5G,CAAAhD,KAAA2J,IACfvD,EAAApD,OAAA6G,EAAA,EAAA7G,CAAAhD,KAAAgD,OAAA8G,EAAA,EAAA9G,CAAA2G,GAAAI,KAAA/J,KAAMJ,KAaVoI,UAAY,WAAM,IAAAjB,EACkBX,EAAKxG,MAA7B+C,EADMoE,EACNpE,WAAYV,EADN8E,EACM9E,QAEpB,OAAyB,IAApBA,EAAQQ,UACY,IAApBR,EAAQS,SACO,OAAfC,EAEM9D,EAAAC,EAAAC,cAACiL,GAAD,CAAMrH,WAAYA,KAEJ,IAApBV,EAAQQ,SACY,OAApBR,EAAQS,QAEF7D,EAAAC,EAAAC,cAAC+I,GAAD,MACe,OAAfnF,EAEA9D,EAAAC,EAAAC,cAACgJ,GAAD,CAAOzD,QAAQ,SAAf,2BAFJ,GA3BQ8B,mFAIC,IAAAuB,EACe3H,KAAKJ,OACpCqK,EAFgBtC,EACRsC,gBADQtC,EACQ7C,iDAKJ9E,KAAKJ,MAAjBqC,QACAS,QAAU,sCAsBb,IACGsF,EAAchI,KAAdgI,UAER,OACInJ,EAAAC,EAAAC,cAAA,WACMiJ,YAvCO7H,IAAMC,WCQhB8H,eATS,SAAAnI,GAAK,MAAK,CAC9B4C,YpB2BmBuH,EoB3BCnK,EpB2BDmK,EAAGrI,MAAkBc,YoB1BxCV,QAASF,EAAWhC,IpB0BD,IAAAmK,GoBvBI,SAAA7G,GAAQ,MAAK,CACpC4G,eAAgB,SAACnF,GAAD,OAAQzB,EpBsFS,SAACyB,GAClC,sBAAAqF,EAAAnH,OAAAC,EAAA,EAAAD,CAAAE,EAAApE,EAAAqE,KAAO,SAAAiH,EAAM/G,GAAN,IAAAC,EAAA,OAAAJ,EAAApE,EAAAyE,KAAA,SAAA8G,GAAA,cAAAA,EAAA5G,KAAA4G,EAAA3G,MAAA,cACHL,EAASpC,KADNoJ,EAAA5G,KAAA,EAAA4G,EAAA3G,KAAA,EAGiBC,IAAMC,IAAN,GAAA9C,ODpGL,OCoGK,WAAAA,OAA8BgE,IAH/C,OAGKxB,EAHL+G,EAAAxG,KAICR,EAjF6B,CAAE1B,QAiFR2B,EAAIxB,KAjFaZ,KAAMM,IAkF9C6B,EAASjC,KALViJ,EAAA3G,KAAA,gBAAA2G,EAAA5G,KAAA,EAAA4G,EAAAvG,GAAAuG,EAAA,SAOChH,EAAS/B,EAAa+I,EAAAvG,GAAEC,UAPzB,yBAAAsG,EAAArG,SAAAoG,EAAA,iBAAP,gBAAAE,GAAA,OAAAH,EAAAjG,MAAAlE,KAAAmE,YAAA,GoBvFiCoG,CAAsBzF,OAG5CoD,CAA6CyB,ICJ7Ca,GANQ,SAAA5K,GAAK,OACxBf,EAAAC,EAAAC,cAAA,WACIF,EAAAC,EAAAC,cAAC0L,GAAD,CAAqB3F,GAAIlF,EAAM8K,MAAMC,OAAO7F,oCCarC8F,yBAbG,SAAAlM,GAAA,IAAGmM,EAAHnM,EAAGmM,MAAOC,EAAVpM,EAAUoM,MAAOC,EAAjBrM,EAAiBqM,SAAaxG,EAA9BvB,OAAAwB,EAAA,EAAAxB,CAAAtE,EAAA,qCAChBG,EAAAC,EAAAC,cAAA,SAAOC,UAAU,cACfH,EAAAC,EAAAC,cAAA,QAAMC,UAAS,qBAAA8B,QAAyB+J,EAAMzF,OAAS,EAAK,yBAA2B,KAAO0F,GAC9FjM,EAAAC,EAAAC,cAAA,QAAAiE,OAAAyB,OAAA,GAAWF,EAAX,CAAuBsG,MAAOA,EAAOE,SAAUA,EAAU/L,UAAU,0BCOxDgM,WAVM,SAAAtM,GAAA,IAAG4B,EAAH5B,EAAG4B,SAAH,OACnBzB,EAAAC,EAAAC,cAAA,MAAIC,UAAU,iBACVsB,KCsFS2K,sNA7EXlL,MAAQ,CACJ2F,KAAM,CACFhG,MAAO,GACPsF,OAAQ,GACRD,QAAS,OASjBmG,QAAU,SAACC,GAAM,IACLD,EAAY9E,EAAKxG,MAAjBsL,QACAxF,EAASU,EAAKrG,MAAd2F,KAERyF,EAAEC,iBACFF,EAAQxF,MAGZ2F,YAAc,SAACF,GAAM,IACTzF,EAASU,EAAKrG,MAAd2F,KACRU,EAAKK,SAAS,CAAEf,KAAK1C,OAAAsI,EAAA,EAAAtI,CAAA,GAAK0C,EAAN1C,OAAAuI,GAAA,EAAAvI,CAAA,GAAamI,EAAEK,OAAO3K,KAAOsK,EAAEK,OAAOX,aAG9DY,aAAe,SAACC,GAAS,IACbhG,EAASU,EAAKrG,MAAd2F,KACRU,EAAKK,SAAS,CAAEf,KAAK1C,OAAAsI,EAAA,EAAAtI,CAAA,GAAK0C,EAAN,CAAYX,QAAS2G,2FAnBrB1L,KAAKJ,MAAjBqC,QACAS,QAAU,sCAqBb,IAEGgD,EAAS1F,KAAKD,MAAd2F,KACA2F,EAAuCrL,KAAvCqL,YAAaI,EAA0BzL,KAA1ByL,aAAcP,EAAYlL,KAAZkL,QAC3BjJ,EAAYjC,KAAKJ,MAAjBqC,QAER,OAAGA,EAAQV,MAAc1C,EAAAC,EAAAC,cAACgJ,GAAD,CAAOzD,QAAQ,SAASrC,EAAQV,OACjDU,EAAQS,QAAgB7D,EAAAC,EAAAC,cAACgJ,GAAD,CAAOzD,QAAQ,WAAf,wBACxBrC,EAAQQ,QAAgB5D,EAAAC,EAAAC,cAAC+I,GAAD,MAE5BjJ,EAAAC,EAAAC,cAAA,QAAM4M,SAAUT,GACZrM,EAAAC,EAAAC,cAAC6M,GAAD,CACId,MAAM,QACND,MAAOnF,EAAKhG,MACZmB,KAAK,QACLkK,SAAUM,IAGdxM,EAAAC,EAAAC,cAAC6M,GAAD,CACId,MAAM,SACND,MAAOnF,EAAKV,OACZnE,KAAK,SACLkK,SAAUM,IAGdxM,EAAAC,EAAAC,cAAC8M,GAAD,0BAEAhN,EAAAC,EAAAC,cAAC+M,GAAAhN,EAAD,CAEIE,UAAU,iBACV0M,KAAMhG,EAAKX,QACXgG,SAAUU,EACVM,QAAS,CAAEC,aAAa,EAAOC,QAAS,CAAEC,QAAS,CAAC,OAAQ,SAAU,YAAa,SAAU,KAAM,UAGvGrN,EAAAC,EAAAC,cAACyG,EAAD,CAAQlB,QAAQ,WAAhB,oBApEOnE,IAAMC,YCFd8H,eARS,SAAAnI,GAAK,MAAK,CAC9BkC,QAASF,EAAWhC,KAGG,SAAAsD,GAAQ,MAAK,CACpC6H,QAAS,SAACxF,GAAD,OAAUrC,EzBqGO,SAACqC,GAC3B,sBAAAyG,EAAAnJ,OAAAC,EAAA,EAAAD,CAAAE,EAAApE,EAAAqE,KAAO,SAAAiJ,EAAM/I,GAAN,OAAAH,EAAApE,EAAAyE,KAAA,SAAA8I,GAAA,cAAAA,EAAA5I,KAAA4I,EAAA3I,MAAA,cACHL,EAASpC,KADNoL,EAAA5I,KAAA,EAAA4I,EAAA3I,KAAA,EAGiBC,IAAM+B,KAAN,GAAA5E,ODlHL,OCkHK,UAA+B4E,GAHhD,OAAA2G,EAAAxI,KAICR,EAASjC,KAJViL,EAAA3I,KAAA,gBAAA2I,EAAA5I,KAAA,EAAA4I,EAAAvI,GAAAuI,EAAA,SAMChJ,EAAS/B,EAAa+K,EAAAvI,GAAEC,UANzB,yBAAAsI,EAAArI,SAAAoI,EAAA,iBAAP,gBAAAE,GAAA,OAAAH,EAAAjI,MAAAlE,KAAAmE,YAAA,GyBtG4BoI,CAAe7G,OAGhCwC,CAA6C+C,ICF7CuB,GAPK,kBAChB3N,EAAAC,EAAAC,cAAA,WACIF,EAAAC,EAAAC,cAAA,2BACAF,EAAAC,EAAAC,cAAC0N,GAAD,QCwGOC,sNA9FX3M,MAAQ,CACJ2F,KAAM,CACFhG,MAAO,GACPsF,OAAQ,GACRD,QAAS,OAgCjB4H,WAAa,SAACxB,GAAM,IAAApE,EACgBX,EAAKxG,MAA7B+M,EADQ5F,EACR4F,WAAYC,EADJ7F,EACI6F,QACZlH,EAASU,EAAKrG,MAAd2F,KAERyF,EAAEC,iBACFuB,EAAWjH,EAAMkH,MAGrBvB,YAAc,SAACF,GAAM,IACTzF,EAASU,EAAKrG,MAAd2F,KACRU,EAAKK,SAAS,CAAEf,KAAK1C,OAAAsI,EAAA,EAAAtI,CAAA,GAAK0C,EAAN1C,OAAAuI,GAAA,EAAAvI,CAAA,GAAamI,EAAEK,OAAO3K,KAAOsK,EAAEK,OAAOX,aAG9DY,aAAe,SAACC,GAAS,IACbhG,EAASU,EAAKrG,MAAd2F,KACRU,EAAKK,SAAS,CAAEf,KAAK1C,OAAAsI,EAAA,EAAAtI,CAAA,GAAK0C,EAAN,CAAYX,QAAS2G,2FA1CzC1L,KAAK6M,8CAIE,IAAAlF,EACuB3H,KAAKJ,MAA3BgC,EADD+F,EACC/F,SAAUgL,EADXjF,EACWiF,QAClB,GAAuB,IAApBhL,EAASwD,OACRpF,KAAKyG,SAAS,CACVf,KAAM,CACFhG,MAAO,GACPsF,OAAQ,GACRD,QAAS,UAGd,CACH,IAAM+H,EAAgBlL,EAASmL,KAAK,SAAArH,GAAI,OAAIA,EAAKZ,KAAO8H,IAChDlN,EAA2BoN,EAA3BpN,MAAOsF,EAAoB8H,EAApB9H,OAAQD,EAAY+H,EAAZ/H,QACvB/E,KAAKyG,SAAS,CACVf,KAAM,CACFhG,QACAsF,SACAD,+CAwBP,IACG9C,EAAYjC,KAAKJ,MAAjBqC,QACAyD,EAAS1F,KAAKD,MAAd2F,KACA2F,EAA0CrL,KAA1CqL,YAAaI,EAA6BzL,KAA7ByL,aAAckB,EAAe3M,KAAf2M,WAEnC,OAAG1K,EAAQV,MAAc1C,EAAAC,EAAAC,cAACgJ,GAAD,CAAOzD,QAAQ,SAASrC,EAAQV,OACjDU,EAAQS,QAAgB7D,EAAAC,EAAAC,cAACgJ,GAAD,CAAOzD,QAAQ,WAAf,0BACxBrC,EAAQQ,QAAgB5D,EAAAC,EAAAC,cAAC+I,GAAD,MAE5BjJ,EAAAC,EAAAC,cAAA,QAAM4M,SAAUgB,GACZ9N,EAAAC,EAAAC,cAAC6M,GAAD,CACId,MAAM,QACND,MAAOnF,EAAKhG,MACZmB,KAAK,QACLkK,SAAUM,IAGdxM,EAAAC,EAAAC,cAAC6M,GAAD,CACId,MAAM,SACND,MAAOnF,EAAKV,OACZnE,KAAK,SACLkK,SAAUM,IAGdxM,EAAAC,EAAAC,cAAC8M,GAAD,0BAEAhN,EAAAC,EAAAC,cAAC+M,GAAAhN,EAAD,CAEIE,UAAU,iBACV0M,KAAMhG,EAAKX,QACXgG,SAAUU,EACVM,QAAS,CAAEC,aAAa,EAAOC,QAAS,CAAEC,QAAS,CAAC,OAAQ,SAAU,YAAa,SAAU,KAAM,UAGvGrN,EAAAC,EAAAC,cAACyG,EAAD,CAAQlB,QAAQ,WAAhB,uBA1FanE,IAAMC,YCApB8H,eAVS,SAAAnI,GAAK,MAAK,CAC9B6B,SAAUA,EAAS7B,GACnBkC,QAASF,EAAWhC,KAGG,SAAAsD,GAAQ,MAAK,CACpCsJ,WAAY,SAACK,EAAalI,GAAd,OAAqBzB,E5BiHJ,SAAC2J,EAAalI,GAC3C,sBAAAmI,EAAAjK,OAAAC,EAAA,EAAAD,CAAAE,EAAApE,EAAAqE,KAAO,SAAA+J,EAAM7J,GAAN,OAAAH,EAAApE,EAAAyE,KAAA,SAAA4J,GAAA,cAAAA,EAAA1J,KAAA0J,EAAAzJ,MAAA,cACHL,EAASpC,KADNkM,EAAA1J,KAAA,EAAA0J,EAAAzJ,KAAA,EAGiBC,IAAM+B,KAAN,GAAA5E,OD/HL,OC+HK,WAAAA,OAA+BgE,EAA/B,SAA0CkI,GAH3D,OAAAG,EAAAtJ,KAICR,EAASjC,KAJV+L,EAAAzJ,KAAA,gBAAAyJ,EAAA1J,KAAA,EAAA0J,EAAArJ,GAAAqJ,EAAA,SAMC9J,EAAS/B,EAAa6L,EAAArJ,GAAEC,UANzB,yBAAAoJ,EAAAnJ,SAAAkJ,EAAA,iBAAP,gBAAAE,GAAA,OAAAH,EAAA/I,MAAAlE,KAAAmE,YAAA,G4BlH0CkJ,CAAkBL,EAAalI,KACzEwI,UAAW,kBAAMjK,EAASP,QAGfoF,CAA6CwE,ICJ7Ca,GAPY,SAAA3N,GAAK,OAC5Bf,EAAAC,EAAAC,cAAA,WACIF,EAAAC,EAAAC,cAAA,yBACAF,EAAAC,EAAAC,cAACyO,GAAD,CAAgBZ,QAAShN,EAAM8K,MAAMC,OAAO7F,OC4DrC2I,8MA1DXC,kBAAoB,YAEhBJ,EADsBlH,EAAKxG,MAAnB0N,gBASZtF,UAAY,WAAM,IAAAjB,EACgBX,EAAKxG,MAA3BgC,EADMmF,EACNnF,SAAUK,EADJ8E,EACI9E,QAEZ0L,EAAgBvL,KAAKwL,MAAMxL,KAAKyL,SAAWjM,EAASwD,QACpD0I,EAAclM,GAAYA,EAAS+L,IAAmB,GACpDjO,EAA+BoO,EAA/BpO,MAAOsF,EAAwB8I,EAAxB9I,OAAQD,EAAgB+I,EAAhB/I,QAASD,EAAOgJ,EAAPhJ,GAEhC,OAAyB,IAApB7C,EAAQQ,UACY,IAApBR,EAAQS,SACY,IAApBd,EAASwD,OAGNvG,EAAAC,EAAAC,cAAA,OAAK+F,GAAIA,GACLjG,EAAAC,EAAAC,cAAA,WAASC,UAAU,gBACfH,EAAAC,EAAAC,cAAC8J,EAAD,KAAYnJ,GACZb,EAAAC,EAAAC,cAACmG,EAAD,KAAUH,GACVlG,EAAAC,EAAAC,cAAA,oBAAYiG,MAKH,IAApB/C,EAAQQ,SACY,OAApBR,EAAQS,QAEF7D,EAAAC,EAAAC,cAAC+I,GAAD,WAJJ,uFAxBa9H,KAAKJ,MAAjBqC,QACAS,QAAU,sCAgCb,IACGsF,EAAchI,KAAdgI,UAER,OACInJ,EAAAC,EAAAC,cAAA,WACMiJ,YA9CO7H,IAAMC,WCOhB8H,eATS,SAAAnI,GAAK,MAAK,CAC9B6B,SAAUA,EAAS7B,GACnBkC,QAASF,EAAWhC,KAGG,SAAAsD,GAAQ,MAAK,CACpCiK,UAAW,kBAAMjK,EAASP,QAGfoF,CAA6CuF,ICH7CM,GAPQ,kBACnBlP,EAAAC,EAAAC,cAAA,WACIF,EAAAC,EAAAC,cAAA,8BACAF,EAAAC,EAAAC,cAACiP,GAAD,QCsCOC,8MA9BXlO,MAAQ,CACJ8B,MAAO,uFAGS,IAAAqM,EAAAlO,KAChBmO,MAAM,mCACDC,KAAK,SAAA9K,GAAG,OAAIA,EAAI+K,SAChBD,KAAK,SAAA9K,GACF4K,EAAKzH,SAAS,CAAE5E,MAAOyB,uCAK/B,OACIzE,EAAAC,EAAAC,cAACuP,EAAD,KACIzP,EAAAC,EAAAC,cAACwP,EAAA,EAAD,KACI1P,EAAAC,EAAAC,cAACwP,EAAA,EAAD,CAAO/O,KAAK,IAAIgP,OAAK,EAACC,UAAWC,KACjC7P,EAAAC,EAAAC,cAACwP,EAAA,EAAD,CAAO/O,KAAK,SAASgP,OAAK,EAACC,UAAWhH,KACtC5I,EAAAC,EAAAC,cAACwP,EAAA,EAAD,CAAO/O,KAAK,aAAagP,OAAK,EAACC,UAAWjC,KAC1C3N,EAAAC,EAAAC,cAACwP,EAAA,EAAD,CAAO/O,KAAK,aAAagP,OAAK,EAACC,UAAWjE,KAC1C3L,EAAAC,EAAAC,cAACwP,EAAA,EAAD,CAAO/O,KAAK,kBAAkBgP,OAAK,EAACC,UAAWlB,KAC/C1O,EAAAC,EAAAC,cAACwP,EAAA,EAAD,CAAO/O,KAAK,UAAUgP,OAAK,EAACC,UAAWV,KACvClP,EAAAC,EAAAC,cAACwP,EAAA,EAAD,CAAO/O,KAAK,WAAWgP,OAAK,EAACC,UAAWE,KACxC9P,EAAAC,EAAAC,cAACwP,EAAA,EAAD,CAAOE,UAAWG,cAxBpBzO,IAAMC,8BCTlByO,GAAcC,aAAgB,CAChCjN,MlCgDW,WAAwD,IAAvCkN,EAAuC5K,UAAAiB,OAAA,QAAA4J,IAAA7K,UAAA,GAAAA,UAAA,GAA3B3B,EAAcyM,EAAa9K,UAAAiB,OAAA,QAAA4J,IAAA7K,UAAA,GAAAA,UAAA,GAAJ,GAC/D,OAAQ8K,EAAO/N,MACX,KAAKH,EACD,OAAOiC,OAAAsI,EAAA,EAAAtI,CAAA,GAAK+L,EAAZ,CAAuBjN,KAAMmN,EAAOtN,UACxC,KAAKX,EACD,OAAOgC,OAAAsI,EAAA,EAAAtI,CAAA,GAAK+L,EAAZ,CAAuB9M,QAAS,CAAEQ,SAAS,EAAMlB,MAAO,KAAMmB,QAAS,QAC3E,KAAKvB,EACD,OAAO6B,OAAAsI,EAAA,EAAAtI,CAAA,GAAK+L,EAAZ,CAAuB9M,QAAS,CAAEQ,SAAS,EAAOlB,MAAO,KAAMmB,SAAS,KAC5E,KAAKrB,EACD,OAAO2B,OAAAsI,EAAA,EAAAtI,CAAA,GAAK+L,EAAZ,CAAuB9M,QAAS,CAAEQ,SAAS,EAAOlB,MAAO0N,EAAO1N,MAAOmB,SAAS,KACpF,KAAKlB,EACD,OAAOwB,OAAAsI,EAAA,EAAAtI,CAAA,GAAK+L,EAAZ,CAAuBpM,WAAYsM,EAAOtN,UAC9C,KAAKF,EACD,OAAOuB,OAAAsI,EAAA,EAAAtI,CAAA,GACA+L,EADP,CAEIxM,aAAc0M,EAAOtN,QAAQY,aAC7BK,YAAaqM,EAAOtN,QAAQiB,YAC5BN,OAAQ2M,EAAOtN,QAAQW,OACvBR,KAAKkB,OAAAsE,EAAA,EAAAtE,CAAKiM,EAAOtN,QAAQE,SAEjC,QACI,OAAOkN,MkC1DJG,GARDC,aACVN,GACAO,aACIC,aAAgBC,MAChBC,OAAOC,8BAAgCD,OAAOC,iCCHhDC,kBAAcC,SAASC,eAAe,SAU5CC,IAASC,OACLhR,EAAAC,EAAAC,cATS,kBACTF,EAAAC,EAAAC,cAAC+Q,EAAA,EAAD,CAAUZ,MAAOA,IACbrQ,EAAAC,EAAAC,cAACO,EAAA,EAAD,KACIT,EAAAC,EAAAC,cAACgR,GAAD,SAMR,MACAN","file":"static/js/main.132bff18.chunk.js","sourcesContent":["import React from 'react'\r\n\r\nimport './Logo.scss';\r\n\r\nconst Logo = ({ links, location }) => (\r\n  <h1 className=\"logo\">Blog.app</h1>\r\n);\r\n\r\nexport default Logo;\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { Link } from 'react-router-dom';\r\nimport { withRouter } from 'react-router-dom';\r\nimport './MainMenu.scss';\r\n\r\nconst MainMenu = ({ links, location }) => (\r\n  <ul className=\"main-menu\">\r\n    { links.map((link, index) =>\r\n      <li key={index}>\r\n        <Link className={(location.pathname === link.path && 'active') || ''} to={link.path}>{link.title}</Link>\r\n      </li>\r\n    )}\r\n  </ul>\r\n);\r\n\r\nMainMenu.propTypes = {\r\n  links: PropTypes.arrayOf(PropTypes.shape({\r\n    path: PropTypes.string.isRequired,\r\n    title: PropTypes.string.isRequired,\r\n  })),\r\n};\r\n\r\nexport default withRouter(props => <MainMenu {...props}/>);\r\n","import React from 'react';\r\nimport Logo from '../../common/Logo/Logo';\r\nimport MainMenu from '../../layout/MainMenu/MainMenu';\r\nimport './NavBar.scss';\r\n\r\nclass NavBar extends React.Component {\r\n\r\n    state = {\r\n        links: [\r\n            { path: '/', title: 'Home' },\r\n            { path: '/posts/new', title: 'Add post' },\r\n            { path: '/posts', title: 'Posts' },\r\n            { path: '/contact', title: 'Contact' },\r\n            { path: '/random', title: 'Random post' }\r\n        ]\r\n    }\r\n\r\n    render() {\r\n\r\n        const { links } = this.state;\r\n\r\n        return (\r\n            <nav className=\"navbar\">\r\n                <Logo />\r\n                <MainMenu  links={links} />\r\n            </nav>\r\n        );\r\n    }\r\n};\r\n\r\nexport default NavBar;","import React from 'react';\nimport PropTypes from 'prop-types';\n\nimport './PageContainer.scss';\n\nconst PageContainer = ({ children }) => (\n  <div className=\"container-fluid\">\n    {children}\n  </div>\n);\n\nPageContainer.propTypes = {\n  children: PropTypes.node,\n};\n\nexport default PageContainer;\n","import React from 'react';\r\nimport NavBar from '../../features/NavBar/NavBar';\r\nimport PageContainer from '../PageContainer/PageContainer';\r\n\r\nconst MainLayout = ({ children }) => (\r\n    <div>\r\n        <PageContainer>\r\n            <NavBar />\r\n            {children}\r\n        </PageContainer>\r\n    </div>\r\n);\r\n\r\nexport default MainLayout;","import React from 'react';\nimport PropTypes from 'prop-types';\n\nimport './PageTitle.scss';\n\nconst PageTitle = ({ children }) => (\n  <h1 className=\"page-title\">\n     {children}\n  </h1>\n);\n\nPageTitle.propTypes = {\n  children: PropTypes.string,\n};\n\nexport default PageTitle;\n","export const API_URL = '/api';\r\n\r\nexport const BASE_URL = 'https://app-mernfirstapp.herokuapp.com/';","import axios from 'axios';\r\nimport { API_URL } from '../config';\r\n\r\n// action name creator\r\nconst reducerName = 'posts';\r\nconst createActionName = name => `app/${reducerName}/${name}`;\r\n\r\nexport const LOAD_POSTS = createActionName('LOAD_POSTS');\r\nexport const loadPosts = payload => ({ payload, type: LOAD_POSTS });\r\n\r\nexport const START_REQUEST = createActionName('START_REQUEST');\r\nexport const startRequest = () => ({ type: START_REQUEST });\r\n\r\nexport const END_REQUEST = createActionName('END_REQUEST');\r\nexport const endRequest = () => ({ type: END_REQUEST });\r\n\r\nexport const ERROR_REQUEST = createActionName('ERROR_REQUEST');\r\nexport const errorRequest = error => ({ error, type: ERROR_REQUEST });\r\n\r\nexport const GET_SINGLE_POST = createActionName('GET_SINGLE_POST');\r\nexport const getSinglePost = payload => ({ payload, type: GET_SINGLE_POST });\r\n\r\nexport const LOAD_POSTS_PAGE = createActionName('LOAD_POSTS_PAGE');\r\nexport const loadPostsByPage = payload => ({ payload, type: LOAD_POSTS_PAGE });\r\n\r\n// get posts\r\nexport const getPosts = ({ posts }) => posts.data;\r\n// get number of all posts\r\nexport const getPostsNumber = ({ posts }) => posts.data.length;\r\n\r\nexport const getRequest = ({ posts }) => posts.request;\r\n\r\nexport const getPost = ({ posts }) => posts.singlePost; \r\n\r\nexport const getPages = ({ posts }) => Math.ceil(posts.amount / posts.postsPerPage);\r\n\r\nexport const getInitialPage = ({ posts }) => posts.initialPage;\r\n\r\nexport const getPresentPage = ({ posts }) => posts.presentPage;\r\n\r\nconst initialState = {\r\n    data: [],\r\n    request: {\r\n        pending: false,\r\n        error: null,\r\n        success: null\r\n    },\r\n    singlePost: {},\r\n    amount: 0,\r\n    presentPage: null,\r\n    initialPage: 1\r\n};\r\n\r\nexport default function reducer(statePart = initialState, action = {}) {\r\n    switch (action.type) {\r\n        case LOAD_POSTS:\r\n            return { ...statePart, data: action.payload };\r\n        case START_REQUEST:\r\n            return { ...statePart, request: { pending: true, error: null, success: null } };\r\n        case END_REQUEST:\r\n            return { ...statePart, request: { pending: false, error: null, success: true } };\r\n        case ERROR_REQUEST:\r\n            return { ...statePart, request: { pending: false, error: action.error, success: false } };\r\n        case GET_SINGLE_POST:\r\n            return { ...statePart, singlePost: action.payload };\r\n        case LOAD_POSTS_PAGE:\r\n            return {\r\n                ...statePart,\r\n                postsPerPage: action.payload.postsPerPage,\r\n                presentPage: action.payload.presentPage,\r\n                amount: action.payload.amount,\r\n                data: [...action.payload.posts],\r\n            };\r\n        default:\r\n            return statePart;\r\n    }\r\n};\r\n\r\n// THUNKS:\r\n\r\n// get all posts\r\nexport const loadPostsRequest = () => {\r\n    return async dispatch => {\r\n        dispatch(startRequest());\r\n        try {\r\n            let res = await axios.get(`${API_URL}/posts`);\r\n            dispatch(loadPosts(res.data));\r\n            dispatch(endRequest());\r\n        } catch (e) {\r\n            dispatch(errorRequest(e.message));\r\n        }\r\n        \r\n    };\r\n};\r\n\r\n//get single post\r\nexport const loadSinglePostRequest = (id) => {\r\n    return async dispatch => {\r\n        dispatch(startRequest());\r\n        try {\r\n            let res = await axios.get(`${API_URL}/posts/${id}`);\r\n            dispatch(getSinglePost(res.data));\r\n            dispatch(endRequest());\r\n        } catch (e) {\r\n            dispatch(errorRequest(e.message));\r\n        }\r\n    }\r\n};\r\n\r\n//add new post\r\nexport const addPostRequest = (post) => {\r\n    return async dispatch => {\r\n        dispatch(startRequest());\r\n        try {\r\n            let res = await axios.post(`${API_URL}/posts`, post);\r\n            dispatch(endRequest());\r\n        } catch(e) {\r\n            dispatch(errorRequest(e.message));\r\n        }\r\n    }\r\n};\r\n\r\n//update post\r\nexport const updatePostRequest = (updatedPost, id) => {\r\n    return async dispatch => {\r\n        dispatch(startRequest());\r\n        try {\r\n            let res = await axios.post(`${API_URL}/posts/${id}/edit`, updatedPost);\r\n            dispatch(endRequest());\r\n        } catch(e) {\r\n            dispatch(errorRequest(e.message));\r\n        }\r\n    }\r\n};\r\n\r\n// get posts by range\r\nexport const loadPostsByPageRequest = (page, postsPerPage) => {\r\n    return async dispatch => {\r\n        dispatch(startRequest());\r\n\r\n        try {\r\n            const startAt = (page-1) * postsPerPage;\r\n            const limit = postsPerPage;\r\n\r\n            let res = await axios.get(`${API_URL}/posts/range/${startAt}/${limit}`);\r\n\r\n            const payload = {\r\n                posts: res.data.posts,\r\n                amount: res.data.amount,\r\n                postsPerPage,\r\n                presentPage: page\r\n            };\r\n\r\n            dispatch(loadPostsByPage(payload));\r\n            dispatch(endRequest());\r\n\r\n        } catch(e) {\r\n            dispatch(errorRequest(e.message));\r\n        }\r\n    }\r\n};","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\n\r\nimport './Button.scss';\r\n\r\nconst Button = ({ variant = '', children, ...otherProps }) => (\r\n  <button { ...otherProps } className={ `button button--${variant}`}>\r\n    { children }\r\n  </button>\r\n);\r\n\r\nButton.propTypes = {\r\n  variant: PropTypes.string.isRequired,\r\n};\r\n\r\nexport default Button;\r\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport './SmallTitle.scss';\n\nconst SmallTitle = ({ children, ...otherProps }) => (\n  <h2 {...otherProps} className=\"small-title\">\n    { children }\n  </h2>\n);\n\nSmallTitle.propTypes = {\n  children: PropTypes.string,\n};\n\nexport default SmallTitle;\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport ReactHtmlParser from 'react-html-parser';\r\n\r\nconst HtmlBox = ({ children, ...otherProps }) => (\r\n    <p {...otherProps} className=\"html-box\">\r\n        {ReactHtmlParser(children)}\r\n    </p>\r\n);\r\n\r\nHtmlBox.propTypes = {\r\n    children: PropTypes.string,\r\n};\r\n\r\nexport default HtmlBox;","import React from 'react';\r\nimport { PropTypes } from 'prop-types';\r\nimport { Link } from 'react-router-dom';\r\nimport Button from '../../common/Button/Button';\r\nimport SmallTitle from '../../common/SmallTitle/SmallTitle';\r\nimport HtmlBox from '../../common/HtmlBox/HtmlBox';\r\nimport cutText from './cutText';\r\nimport './PostSummary.scss';\r\n\r\nconst PostSummary = ({ id, title, content, author }) => (\r\n    <article className=\"post-summary\">\r\n        <SmallTitle>{title}</SmallTitle>\r\n        <HtmlBox>{cutText(content, 250)}</HtmlBox>\r\n        <p>Author: {author}</p>\r\n        <Link to={'/posts/' + id}>\r\n            <Button variant=\"primary\">\r\n            Read more\r\n            </Button>\r\n        </Link>\r\n        <Link to={'/posts/' + id + '/edit'}>\r\n            <Button variant=\"info\">\r\n                Edit\r\n            </Button>\r\n        </Link>\r\n    </article>\r\n);\r\n\r\nPostSummary.propTypes = {\r\n    id: PropTypes.string,\r\n    title: PropTypes.string,\r\n    content: PropTypes.string,\r\n    author: PropTypes.string\r\n}\r\n\r\nexport default PostSummary;","export default (content, maxLength) => {\r\n    if(content.length < 1) {\r\n        return 'Error';\r\n    } \r\n\r\n    if(content.length <= maxLength) {\r\n        return content;\r\n    }\r\n\r\n    return content.substr(0, content.lastIndexOf(' ', maxLength)) + '...';\r\n};","import React from 'react';\r\nimport { PropTypes } from 'prop-types';\r\nimport PostSummary from '../PostSummary/PostSummary';\r\n\r\nconst PostsList = ({posts}) => (\r\n    <div>\r\n        <section className=\"posts-list\">\r\n            {posts.map(post => <PostSummary key={post.id} {...post} />)}\r\n        </section>\r\n    </div>\r\n);\r\n\r\nPostsList.propTypes = {\r\n    posts: PropTypes.arrayOf(\r\n        PropTypes.shape({\r\n            id: PropTypes.string.isRequired,\r\n            title: PropTypes.string.isRequired,\r\n            content: PropTypes.string.isRequired,\r\n            author: PropTypes.string.isRequired\r\n        })\r\n    ),\r\n};\r\n\r\nexport default PostsList;","import React from 'react';\nimport { Animated } from 'react-animated-css';\n\nimport './Spinner.scss';\n\nconst Spinner = () => (\n  <Animated animationIn=\"fadeIn\" animationOut=\"fadeOut\">\n    <div className=\"lds-ellipsis\">\n      <div></div>\n      <div></div>\n      <div></div>\n      <div></div>\n    </div>\n  </Animated>\n);\n\nexport default Spinner;\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { Animated } from 'react-animated-css';\r\nimport { MdInfoOutline, MdDone, MdErrorOutline } from 'react-icons/md';\r\n\r\nimport './Alert.scss';\r\n\r\nconst Alert = ({ variant = '', children, ...otherProps }) => {\r\n\r\n  const icon = () => {\r\n    switch(variant) {\r\n      case 'info':\r\n        return <MdInfoOutline />\r\n      case 'success':\r\n        return <MdDone />\r\n      case 'warning':\r\n        return <MdErrorOutline />\r\n      case 'error':\r\n        return <MdErrorOutline />\r\n      default:\r\n        return <MdInfoOutline />\r\n    }\r\n  };\r\n\r\n  return (\r\n    <Animated animationIn=\"fadeIn\" animationOut=\"fadeOut\">\r\n      <div {...otherProps} className={`alert alert--${variant}`}>\r\n        {icon()}\r\n        <span className=\"alert__desc\">{children}</span>\r\n      </div>\r\n    </Animated>\r\n  )\r\n\r\n};\r\n\r\nAlert.propTypes = {\r\n  variant: PropTypes.string.isRequired,\r\n  children: PropTypes.string.isRequired,\r\n};\r\n\r\nexport default Alert;\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\n\r\nimport './Pagination.scss';\r\n\r\nimport { FaAngleLeft } from 'react-icons/fa';\r\nimport { FaAngleRight } from 'react-icons/fa';\r\n\r\nclass Pagination extends React.Component {\r\n\r\n    state = {\r\n\t\tpresentPage: this.props.presentPage || this.props.initalPage\r\n\t}\r\n\r\n\tchangePage = (newPage) => {\r\n\t\tconst { onPageChange  } = this.props;\r\n\t\tthis.setState({ presentPage: newPage });\r\n        onPageChange(newPage);\r\n\t}\r\n\r\n    goToRight = (page) => {\r\n        const { onPageChange } = this.props;\r\n        const incrementPage = page + 1;\r\n        this.setState({ presentPage: incrementPage });\r\n        onPageChange(incrementPage);\r\n    }\r\n\r\n    goToLeft = (page) => {\r\n        const { onPageChange } = this.props;\r\n        const decrementPage = page - 1;\r\n        this.setState({ presentPage: decrementPage });\r\n        onPageChange(decrementPage);\r\n    }\r\n\r\n    render() {\r\n\r\n        const { pages, pagination } = this.props;\r\n        const { presentPage } = this.state;\r\n        const { changePage, goToRight, goToLeft } = this;\r\n        const leftIcon = presentPage >= 2 ? <FaAngleLeft className=\"pagination__list__item\" onClick={() => goToLeft(presentPage) } /> : '';\r\n        const rightIcon = presentPage !== pages ? <FaAngleRight className=\"pagination__list__item\" onClick={() => goToRight(presentPage)} /> : '';\r\n\r\n        if(pagination) {\r\n         return (\r\n            <div className=\"pagination\">\r\n                <ul className=\"pagination__list\">\r\n                    <li>{ leftIcon }</li>\r\n                    {[...Array(pages)].map((el, page) => \r\n                        <li \r\n                            key={++page}\r\n                            onClick={() => changePage(page) }\r\n                            className={`pagination__list__item${((page) === presentPage) ? ' pagination__list__item--active' : ''}`}>\r\n                            {page}\r\n                        </li>\r\n                    )}\r\n                    <li>{ rightIcon }</li>\r\n                </ul>\r\n            </div>\r\n            );\r\n        } else {\r\n            return '';\r\n        }\r\n    }\r\n\r\n}\r\n\r\nPagination.propTypes = {\r\n    pages: PropTypes.number.isRequired,\r\n    initialPage: PropTypes.number,\r\n    onPageChange: PropTypes.func.isRequired,\r\n    pagination: PropTypes.bool.isRequired\r\n};\r\n\r\nexport default Pagination;","import React from 'react';\r\nimport { PropTypes } from 'prop-types';\r\nimport PostsList from '../PostsList/PostsList';\r\nimport Spinner from '../../common/Spinner/Spinner';\r\nimport Alert from '../../common/Alert/Alert';\r\nimport Pagination from '../../common/Pagination/Pagination';\r\n\r\nclass Posts extends React.Component {\r\n\r\n    state = {\r\n        postsPerPage: this.props.postsPerPage,\r\n        pagination: this.props.pagination\r\n    }\r\n    \r\n    componentDidMount() {\r\n        const { loadPostsByPage, initialPage } = this.props;\r\n        const { postsPerPage } = this.state;\r\n\r\n        loadPostsByPage(initialPage, postsPerPage);\r\n    }\r\n\r\n    componentDidUpdate() {\r\n        const { request } = this.props;\r\n        request.success = null;\r\n    }\r\n\r\n    loadPostsPage = (page) => {\r\n        const { loadPostsByPage } = this.props;\r\n        const { postsPerPage } = this.state;\r\n\r\n        loadPostsByPage(page, postsPerPage);\r\n    }\r\n\r\n    checkData() {\r\n        const { posts, request, pages, initialPage, presentPage } = this.props;\r\n        const { pagination } = this.state;\r\n        const { loadPostsPage } = this;   \r\n\r\n        if ((request.pending === false) && \r\n            (request.success === true) && \r\n            (posts.length > 0)) \r\n        {\r\n            return ( \r\n                <div>\r\n                    <PostsList posts={posts} />\r\n                    <Pagination \r\n                        pages={pages} \r\n                        onPageChange={loadPostsPage} \r\n                        initialPage={initialPage} \r\n                        pagination={pagination} \r\n                        presentPage={presentPage}\r\n                    />\r\n                </div>\r\n            )\r\n        } \r\n        else if (\r\n            (request.pending === true) &&\r\n            (request.success === null))\r\n        {\r\n           return <Spinner />;\r\n        } else if (\r\n            (request.pending === true) && \r\n            (request.error !== null)) \r\n        {\r\n           return <Alert variant=\"error\">Error. Posts not found ;-(</Alert>;\r\n        } else if (\r\n            (request.pending === false) && \r\n            (request.success === true) && \r\n            (posts.length === 0)) \r\n        {\r\n            return <Alert variant=\"info\">No posts added</Alert>;\r\n        }\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div>\r\n                { this.checkData() }\r\n            </div>\r\n        )\r\n    };\r\n\r\n};\r\n\r\nPosts.propTypes = {\r\n    posts: PropTypes.arrayOf(\r\n      PropTypes.shape({\r\n        id: PropTypes.string.isRequired,\r\n        title: PropTypes.string.isRequired,\r\n        content: PropTypes.string.isRequired,\r\n        author: PropTypes.string.isRequired\r\n      })\r\n    ),\r\n    loadPostsByPage: PropTypes.func.isRequired,\r\n    initialPage: PropTypes.number.isRequired\r\n};\r\n\r\nPosts.defaultProps = {\r\n    postsPerPage: 2,\r\n    pagination: true\r\n}\r\n\r\nexport default Posts;","import { connect } from 'react-redux';\r\nimport { \r\n  getPosts, \r\n  getRequest, \r\n  loadPostsByPageRequest, \r\n  getPages, \r\n  getInitialPage, \r\n  getPresentPage } from '../../../redux/postsRedux';\r\nimport Posts from './Posts';\r\n\r\nconst mapStateToProps = state => ({\r\n  posts: getPosts(state),\r\n  request: getRequest(state),\r\n  pages: getPages(state),\r\n  initialPage: getInitialPage(state),\r\n  presentPage: getPresentPage(state)\r\n});\r\n\r\nconst mapDispatchToProps = dispatch => ({\r\n  loadPostsByPage: (page, postsPerPage) => dispatch(loadPostsByPageRequest(page, postsPerPage)),\r\n});\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Posts);","import React from 'react';\r\nimport PageTitle from '../../common/PageTitle/PageTitle';\r\nimport Posts from '../../features/Posts/PostsContainer';\r\n\r\nconst HomePage = () => (\r\n    <div>\r\n        <PageTitle>Blog</PageTitle>\r\n        <Posts postsPerPage={3} pagination={false} />\r\n    </div>\r\n);\r\n\r\nexport default HomePage;","import React from 'react';\r\nimport { PropTypes } from 'prop-types';\r\n\r\nclass PostsCounter extends React.Component {\r\n\r\n  render() {\r\n\r\n    const { postsNumber } = this.props;\r\n    \r\n    return (\r\n      <div>Posts counter: { postsNumber === 0 ? ' -- no posts -- ' : postsNumber}</div>\r\n    )\r\n  }\r\n\r\n};\r\n\r\nPostsCounter.propTypes = {\r\n  postsNumber: PropTypes.number.isRequired\r\n}\r\n\r\nexport default PostsCounter;","import { connect } from 'react-redux';\r\nimport PostsCounter from './PostsCounter';\r\nimport { getPostsNumber } from '../../../redux/postsRedux';\r\n\r\nconst mapStateToProps = state => ({\r\n    postsNumber: getPostsNumber(state)\r\n});\r\n\r\nexport default connect(mapStateToProps)(PostsCounter);","import React from 'react';\r\n\r\nimport PageTitle from '../../common/PageTitle/PageTitle';\r\nimport PostsCounter from '../../features/PostsCounter/PostsCounterContainer';\r\nimport Posts from '../../features/Posts/PostsContainer';\r\n\r\nconst PostsPage = () => (\r\n  <div>\r\n    <PageTitle>Posts list</PageTitle>\r\n    <PostsCounter />\r\n    <Posts />\r\n  </div>\r\n);\r\n\r\nexport default PostsPage;","import React from 'react';\r\nimport PageTitle from '../../common/PageTitle/PageTitle';\r\n\r\nconst ContactPage = () => (\r\n  <div className=\"contact-wrapper\">\r\n    <PageTitle>Kontakt</PageTitle>\r\n    <div className=\"contact-info\">\r\n      <p>Your Favourite Blooger Ltd.</p>\r\n      <p>9432 Division Street</p>\r\n      <p>Stone Mountain, GA 30083</p>\r\n      <br/>\r\n      <p>Mobile Number: 207-914-3411</p>\r\n    </div>\r\n  </div>\r\n);\r\n\r\nexport default ContactPage;","import React from 'react';\r\n\r\nconst NotFoundPage = () => (\r\n  <div>\r\n    <h1>404 Not Found</h1>\r\n  </div>\r\n);\r\n\r\nexport default NotFoundPage;","import React from 'react';\r\nimport HtmlBox from '../../common/HtmlBox/HtmlBox';\r\nimport '../../common/Button/Button.scss';\r\nimport PageTitle from '../../common/PageTitle/PageTitle';\r\nimport { FacebookProvider, Comments, ShareButton } from 'react-facebook';\r\nimport { withRouter } from 'react-router-dom';\r\nimport { PropTypes } from 'prop-types';\r\nimport { BASE_URL } from '../../../config';\r\n\r\nconst Post = ({ singlePost, location }) => (\r\n   \r\n    <div id={singlePost.id}>\r\n        <article className=\"post-summary\">\r\n            <PageTitle>{singlePost.title}</PageTitle>\r\n            <HtmlBox>{singlePost.content}</HtmlBox>\r\n            <p>Author: {singlePost.author}</p>\r\n            <FacebookProvider appId=\"492529614857567\">\r\n                <ShareButton href={`${BASE_URL}/${location.pathname}`} className=\"button button--primary\">\r\n                    Udostępnij post\r\n                </ShareButton>\r\n            </FacebookProvider>\r\n        </article> \r\n        <FacebookProvider appId=\"492529614857567\">\r\n            <Comments href={`${BASE_URL}/${location.pathname}`} />\r\n        </FacebookProvider>\r\n    </div>\r\n\r\n);\r\n\r\nPost.propTypes = {\r\n    id: PropTypes.string,\r\n    title: PropTypes.string,\r\n    content: PropTypes.string,\r\n    author: PropTypes.string\r\n}\r\n\r\nexport default withRouter(props => <Post {...props}/>);","import React from 'react';\r\nimport Post from './Post';\r\nimport Spinner from '../../common/Spinner/Spinner';\r\nimport Alert from '../../common/Alert/Alert';\r\n\r\nclass SinglePost extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n    }\r\n\r\n    componentDidMount() {\r\n        const { loadSinglePost, id } = this.props;\r\n        loadSinglePost(id);\r\n    }\r\n\r\n    componentDidUpdate() {\r\n        const { request } = this.props;\r\n        request.success = null;\r\n    }\r\n\r\n    checkData = () => {\r\n        const { singlePost, request } = this.props;\r\n\r\n        if ((request.pending === false) &&\r\n            (request.success === true) &&\r\n            (singlePost !== null)) \r\n        {\r\n            return <Post singlePost={singlePost} />\r\n        } else if (\r\n            (request.pending === true) && \r\n            (request.success === null)) \r\n        {\r\n            return <Spinner />;\r\n        } else if (singlePost === null) \r\n        {\r\n            return <Alert variant='error'>Post not found ;-(</Alert>\r\n        }\r\n    }\r\n    \r\n    render() {      \r\n        const { checkData } = this;\r\n\r\n        return (\r\n            <div>\r\n                { checkData() }\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default SinglePost;","import { connect } from 'react-redux';\r\nimport SinglePost from './SinglePost';\r\nimport { getPost, getRequest, loadSinglePostRequest } from '../../../redux/postsRedux';\r\n\r\nconst mapStateToProps = state => ({\r\n    singlePost: getPost(state),\r\n    request: getRequest(state)\r\n});\r\n\r\nconst mapDispatchToProps = dispatch => ({\r\n    loadSinglePost: (id) => dispatch(loadSinglePostRequest(id))\r\n});\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(SinglePost);","import React from 'react';\r\nimport SinglePostContainer from './SinglePostContainer';\r\n\r\nconst SinglePostPage = props => (\r\n    <div>\r\n        <SinglePostContainer id={props.match.params.id} />\r\n    </div>\r\n)\r\n\r\nexport default SinglePostPage;","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\n\r\nimport './TextField.scss';\r\n\r\nconst TextField = ({ value, label, onChange, ...otherProps }) => (\r\n  <label className=\"text-field\">\r\n    <span className={`text-field__label ${(!value.length > 0) ? 'text-field__label--big' : ''}`}>{label}</span>\r\n    <input {...otherProps} value={value} onChange={onChange} className=\"text-field__input\" />\r\n  </label>\r\n);\r\n\r\nTextField.propTypes = {\r\n  value: PropTypes.string.isRequired,\r\n  label: PropTypes.string.isRequired,\r\n  onChange: PropTypes.func.isRequired,\r\n};\r\n\r\nexport default TextField;\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\n\r\nimport './SectionTitle.scss';\r\n\r\nconst SectionTitle = ({ children }) => (\r\n  <h2 className=\"section-title\">\r\n     {children}\r\n  </h2>\r\n);\r\n\r\nSectionTitle.propTypes = {\r\n  children: PropTypes.string,\r\n};\r\n\r\nexport default SectionTitle;\r\n","import React from 'react';\r\nimport { PropTypes } from 'prop-types';\r\n\r\nimport Editor from 'react-medium-editor';\r\nimport 'medium-editor/dist/css/medium-editor.css';\r\nimport 'medium-editor/dist/css/themes/default.css';\r\n\r\nimport TextField from '../../common/TextField/TextField';\r\nimport SectionTitle from '../../common/SectionTitle/SectionTitle';\r\nimport Button from '../../common/Button/Button';\r\nimport Alert from '../../common/Alert/Alert';\r\nimport Spinner from '../../common/Spinner/Spinner';\r\nimport './PostForm.scss';\r\n\r\nclass PostForm extends React.Component {\r\n\r\n    state = {\r\n        post: {\r\n            title: '',\r\n            author: '',\r\n            content: ''\r\n        }\r\n    }\r\n\r\n    componentDidUpdate() {\r\n        const { request } = this.props;\r\n        request.success = null;\r\n    }\r\n\r\n    addPost = (e) => {\r\n        const { addPost } = this.props;\r\n        const { post } = this.state;\r\n\r\n        e.preventDefault();\r\n        addPost(post);\r\n    }\r\n\r\n    updateField = (e) => {\r\n        const { post } = this.state;\r\n        this.setState({ post: {...post, [e.target.name]: e.target.value} });\r\n    }\r\n\r\n    handleEditor = (text) => {\r\n        const { post } = this.state;\r\n        this.setState({ post: {...post, content: text} });\r\n    }\r\n\r\n    render() {\r\n\r\n        const { post } = this.state;\r\n        const { updateField, handleEditor, addPost } = this;\r\n        const { request } = this.props;\r\n\r\n        if(request.error) return <Alert variant=\"error\">{request.error}</Alert>;\r\n        else if(request.success) return <Alert variant=\"success\">Post has been added!</Alert>;\r\n        else if(request.pending) return <Spinner />;\r\n        else return (\r\n            <form onSubmit={addPost}>\r\n                <TextField \r\n                    label=\"Title\"\r\n                    value={post.title}\r\n                    name=\"title\"\r\n                    onChange={updateField}\r\n                />\r\n\r\n                <TextField \r\n                    label=\"Author\"\r\n                    value={post.author}\r\n                    name=\"author\"\r\n                    onChange={updateField}\r\n                />\r\n\r\n                <SectionTitle>Edit Post Content</SectionTitle>\r\n\r\n                <Editor\r\n                    //tag=\"pre\"\r\n                    className=\"content-editor\"\r\n                    text={post.content}\r\n                    onChange={handleEditor}\r\n                    options={{ placeholder: false, toolbar: { buttons: ['bold', 'italic', 'underline', 'anchor', 'h2', 'h3'] } }}\r\n                />\r\n\r\n                <Button variant=\"primary\">Add post</Button>\r\n            </form>\r\n        );\r\n    }\r\n};\r\n\r\nPostForm.propTypes = {\r\n    request: PropTypes.object.isRequired,\r\n    addPost: PropTypes.func.isRequired\r\n};\r\n\r\nexport default PostForm;","import { connect } from 'react-redux';\r\nimport { getRequest, addPostRequest } from '../../../redux/postsRedux';\r\nimport PostForm from './PostForm';\r\n\r\nconst mapStateToProps = state => ({\r\n    request: getRequest(state)\r\n});\r\n\r\nconst mapDispatchToProps = dispatch => ({\r\n    addPost: (post) => dispatch(addPostRequest(post))\r\n});\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(PostForm);","import React from 'react';\r\nimport PostForm from '../../features/PostForm/PostFormContainer';\r\n\r\nconst AddPostPage = () => (\r\n    <div>\r\n        <h1>Add post page</h1>\r\n        <PostForm />\r\n    </div>\r\n);\r\n\r\nexport default AddPostPage;","import React from 'react';\r\nimport { PropTypes } from 'prop-types';\r\n\r\nimport Editor from 'react-medium-editor';\r\nimport 'medium-editor/dist/css/medium-editor.css';\r\nimport 'medium-editor/dist/css/themes/default.css';\r\n\r\nimport TextField from '../../common/TextField/TextField';\r\nimport SectionTitle from '../../common/SectionTitle/SectionTitle';\r\nimport Button from '../../common/Button/Button';\r\nimport Alert from '../../common/Alert/Alert';\r\nimport Spinner from '../../common/Spinner/Spinner';\r\nimport './PostFormUpdate.scss';\r\n\r\nclass PostFormUpdate extends React.Component {\r\n\r\n    state = {\r\n        post: {\r\n            title: '',\r\n            author: '',\r\n            content: ''\r\n        }\r\n    }\r\n\r\n    componentWillMount() {\r\n        this.findPost();\r\n    }\r\n\r\n    // get data and inject them to the state\r\n    findPost() {\r\n        const { getPosts, routeId } = this.props;\r\n        if(getPosts.length === 0) {\r\n            this.setState({ \r\n                post: {\r\n                    title: '',\r\n                    author: '',\r\n                    content: ''\r\n                }\r\n            });\r\n        } else {\r\n            const getSinglePost = getPosts.find(post => post.id === routeId); \r\n            const { title, author, content } = getSinglePost;\r\n            this.setState({ \r\n                post: {\r\n                    title,\r\n                    author,\r\n                    content\r\n                }\r\n            });\r\n        }\r\n    }\r\n\r\n    updatePost = (e) => {\r\n        const { updatePost, routeId } = this.props;\r\n        const { post } = this.state;\r\n\r\n        e.preventDefault();\r\n        updatePost(post, routeId);\r\n    }\r\n\r\n    updateField = (e) => {\r\n        const { post } = this.state;\r\n        this.setState({ post: {...post, [e.target.name]: e.target.value} });\r\n    }\r\n\r\n    handleEditor = (text) => {\r\n        const { post } = this.state;\r\n        this.setState({ post: {...post, content: text} });\r\n    }\r\n\r\n    render() {\r\n        const { request } = this.props;\r\n        const { post } = this.state;\r\n        const { updateField, handleEditor, updatePost } = this;\r\n\r\n        if(request.error) return <Alert variant=\"error\">{request.error}</Alert>;\r\n        else if(request.success) return <Alert variant=\"success\">Post has been updated!</Alert>;\r\n        else if(request.pending) return <Spinner />;\r\n        else return (\r\n            <form onSubmit={updatePost}>\r\n                <TextField \r\n                    label=\"Title\"\r\n                    value={post.title}\r\n                    name=\"title\"\r\n                    onChange={updateField}\r\n                />\r\n\r\n                <TextField \r\n                    label=\"Author\"\r\n                    value={post.author}\r\n                    name=\"author\"\r\n                    onChange={updateField}\r\n                />\r\n\r\n                <SectionTitle>Edit Post Content</SectionTitle>\r\n\r\n                <Editor\r\n                    //tag=\"pre\"\r\n                    className=\"content-editor\"\r\n                    text={post.content}\r\n                    onChange={handleEditor}\r\n                    options={{ placeholder: false, toolbar: { buttons: ['bold', 'italic', 'underline', 'anchor', 'h2', 'h3'] } }}\r\n                />\r\n\r\n                <Button variant=\"primary\">Update post</Button>\r\n            </form>\r\n        )\r\n    }\r\n}\r\n\r\nexport default PostFormUpdate;","import { connect } from 'react-redux';\r\nimport { getPosts, getRequest, updatePostRequest, loadPostsRequest } from '../../../redux/postsRedux';\r\nimport PostFormUpdate from './PostFormUpdate';\r\n\r\nconst mapStateToProps = state => ({\r\n    getPosts: getPosts(state),\r\n    request: getRequest(state)\r\n});\r\n\r\nconst mapDispatchToProps = dispatch => ({\r\n    updatePost: (updatedPost, id) => dispatch(updatePostRequest(updatedPost, id)),\r\n    loadPosts: () => dispatch(loadPostsRequest())\r\n});\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(PostFormUpdate);","import React from 'react';\r\nimport UpdatePostPage from '../../features/UpdatePost/PostFormUpdateContainer';\r\n\r\nconst PostFormUpdatePage = props => (\r\n    <div>\r\n        <h1>Update post</h1>\r\n        <UpdatePostPage routeId={props.match.params.id} />\r\n    </div>\r\n);\r\n\r\nexport default PostFormUpdatePage;","import React from 'react';\r\nimport HtmlBox from '../../common/HtmlBox/HtmlBox';\r\nimport PageTitle from '../../common/PageTitle/PageTitle';\r\nimport Spinner from '../../common/Spinner/Spinner';\r\nimport { PropTypes } from 'prop-types';\r\n\r\nclass RandomPost extends React.Component {\r\n\r\n    componentDidMount = () => {\r\n        const { loadPosts } = this.props;\r\n        loadPosts();\r\n    }\r\n\r\n    componentDidUpdate() {\r\n        const { request } = this.props;\r\n        request.success = null;\r\n    }\r\n\r\n    checkData = () => {\r\n        const { getPosts, request } = this.props;\r\n\r\n        const getRandomPost = Math.floor(Math.random() * getPosts.length);\r\n        const detailPost = (getPosts && getPosts[getRandomPost]) || {};\r\n        const { title, author, content, id } = detailPost;\r\n\r\n        if ((request.pending === false) &&\r\n            (request.success === true) &&\r\n            (getPosts.length !== 0)) \r\n        {\r\n            return (\r\n                <div id={id}>\r\n                    <article className=\"post-summary\">\r\n                        <PageTitle>{title}</PageTitle>\r\n                        <HtmlBox>{content}</HtmlBox>\r\n                        <p>Author: {author}</p>\r\n                    </article> \r\n                </div>\r\n            )\r\n        } else if (\r\n            (request.pending === true) && \r\n            (request.success === null)) \r\n        {\r\n            return <Spinner />;\r\n        }\r\n\r\n    }\r\n\r\n    render() {\r\n        const { checkData } = this;\r\n\r\n        return (\r\n            <div>\r\n                { checkData() }\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nRandomPost.propTypes = {\r\n    id: PropTypes.string,\r\n    title: PropTypes.string,\r\n    content: PropTypes.string,\r\n    author: PropTypes.string,\r\n    loadPosts: PropTypes.func.isRequired\r\n}\r\n\r\nexport default RandomPost;","import { connect } from 'react-redux';\r\nimport { getPosts, getRequest, loadPostsRequest } from '../../../redux/postsRedux';\r\nimport RandomPost from './RandomPost';\r\n\r\nconst mapStateToProps = state => ({\r\n    getPosts: getPosts(state),\r\n    request: getRequest(state)\r\n});\r\n\r\nconst mapDispatchToProps = dispatch => ({\r\n    loadPosts: () => dispatch(loadPostsRequest())\r\n});\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(RandomPost);","import React from 'react';\r\nimport RandomPostContainer from '../../features/RandomPost/RandomPostContainer';\r\n\r\nconst RandomPostPage = () => (\r\n    <div>\r\n        <h1>Random post page</h1>\r\n        <RandomPostContainer />\r\n    </div>\r\n)\r\n\r\nexport default RandomPostPage;","import React from 'react';\r\nimport { Switch, Route } from 'react-router-dom';\r\nimport MainLayout from './components/layout/MainLayout/MainLayout';\r\n\r\nimport Home from './components/pages/Home/HomePage';\r\nimport Posts from './components/pages/Posts/PostsPage';\r\nimport Contact from './components/pages/Contact/ContactPage';\r\nimport NotFound from './components/pages/NotFound/NotFoundPage';\r\nimport SinglePostPage from './components/pages/SinglePost/SinglePostPage';\r\nimport AddPostPage from './components/pages/AddPost/AddPostPage';\r\nimport PostFormUpdatePage from './components/pages/UpdatePost/PostFormUpdatePage';\r\nimport RandomPostPage from './components/pages/RandomPost/RandomPostPage';\r\n\r\nclass App extends React.Component {\r\n    state = {\r\n        posts: []\r\n    }\r\n\r\n    componentDidMount() {\r\n        fetch('http://localhost:8000/api/posts')\r\n            .then(res => res.json())\r\n            .then(res => {\r\n                this.setState({ posts: res });\r\n            });\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <MainLayout>\r\n                <Switch>\r\n                    <Route path='/' exact component={Home} />\r\n                    <Route path='/posts' exact component={Posts} />\r\n                    <Route path='/posts/new' exact component={AddPostPage} />\r\n                    <Route path='/posts/:id' exact component={SinglePostPage} />  \r\n                    <Route path='/posts/:id/edit' exact component={PostFormUpdatePage} />\r\n                    <Route path='/random' exact component={RandomPostPage} />\r\n                    <Route path='/contact' exact component={Contact} />\r\n                    <Route component={NotFound} />\r\n                </Switch>\r\n            </MainLayout>\r\n        );\r\n    }\r\n};\r\n\r\nexport default App;","import { createStore, combineReducers, applyMiddleware, compose } from 'redux';\r\nimport thunk from 'redux-thunk';\r\nimport posts from './postsRedux'\r\n\r\nconst rootReducer = combineReducers({\r\n    posts\r\n});\r\n\r\nconst store = createStore(\r\n    rootReducer,\r\n    compose(\r\n        applyMiddleware(thunk),\r\n        window.__REDUX_DEVTOOLS_EXTENSION__ && window.__REDUX_DEVTOOLS_EXTENSION__()\r\n    )\r\n);\r\n\r\nexport default store;","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport App from './App';\r\nimport { BrowserRouter as Router } from 'react-router-dom';\r\nimport { Provider } from 'react-redux';\r\nimport store from './redux/store';\r\nimport './styles/global.scss';\r\nimport 'animate.css/animate.min.css';\r\n\r\nconst rootElement = document.getElementById('root');\r\n\r\nconst Root = () => (\r\n    <Provider store={store}>\r\n        <Router>\r\n            <App />\r\n        </Router>\r\n    </Provider>\r\n);\r\n\r\nReactDOM.render(\r\n    <Root />,\r\n    rootElement\r\n);"],"sourceRoot":""}